#include "stack.h"

#include <stack>

int main() {
  s21::Stack<double> test;
  std::stack<double> ttest;
  std::cout << "===Init stack===\n";
  std::cout << " Empty? : " << test.empty() << "\n";
 std::cout << " Empty? : " << ttest.empty() << "\n";
  std::cout << " -> Size " << test.size();
    std::cout << " -> Size " << ttest.size();
  std::cout << "\n===First push===";
  test.push(1);
  ttest.push(1);
  std::cout << '\n' << test.top() << " -> Size " << test.size();
    std::cout << '\n' << ttest.top() << " -> Size " << ttest.size();
  std::cout << "\n===Second push===";
  test.push(2);
  ttest.push(2);
  std::cout << '\n' << test.top() << " -> Size " << test.size();
    std::cout << '\n' << ttest.top() << " -> Size " << ttest.size();
  std::cout << "\n===First pop===";
  test.pop();
  ttest.pop();
  std::cout << '\n' << test.top() << " -> Size " << test.size();
    std::cout << '\n' << ttest.top() << " -> Size " << ttest.size();
  std::cout << "\n Empty? : " << test.empty();
    std::cout << "\n Empty? : " << ttest.empty();
  std::cout << "\n===21 Push from 0===";
  test.pop();
  ttest.pop();
  std::cout << '\n' << " -> Size " << test.size();
    std::cout << '\n' << " -> Size " << ttest.size();
  std::cout << "\n Empty? : " << test.empty();
    std::cout << "\n Empty? : " << ttest.empty();
  for (int i = 1; i < 22; ++i) test.push(i);
    for (int i = 1; i < 22; ++i) ttest.push(i);
  std::cout << '\n' << test.top() << " -> Size " << test.size();
    std::cout << '\n' << ttest.top() << " -> Size " << ttest.size();
  std::cout << "\n===Two pops===";
  test.pop();
  test.pop();
  ttest.pop();
  ttest.pop();
  std::cout << '\n' << test.top() << " -> Size " << test.size();
    std::cout << '\n' << ttest.top() << " -> Size " << ttest.size();
  std::cout << "\n==============";
  std::cout << "\n===Swap Test===";
  s21::Stack<double> test2;
  std::stack<double> ttest2;
  test2.swap(test);
  ttest2.swap(ttest);
  std::cout << '\n' << test2.top() << " -> Size " << test2.size();
    std::cout << '\n' << ttest2.top() << " -> Size " << ttest2.size();
  std::cout << "\n==============";
  std::cout << "\n===Move Test===";
  s21::Stack<double> test3(std::move(test2));
  std::stack<double> ttest3(std::move(ttest2));
  std::cout << '\n' << test3.top() << " -> Size " << test3.size();
    std::cout << '\n' << ttest3.top() << " -> Size " << ttest3.size();
  std::cout << "\n==============";
  std::cout << "\n===Move via = Test===";
  s21::Stack<double> test4;
  std::stack<double> ttest4;
  test4 = std::move(test3);
  ttest4 = std::move(ttest3);
  std::cout << '\n' << test4.top() << " -> Size " << test4.size();
    std::cout << '\n' << ttest4.top() << " -> Size " << ttest4.size();
  std::cout << "\n==============";
  std::cout << "\n===Copy Test===";
  s21::Stack<double> test5 = test4;
  std::stack<double> ttest5 = ttest4;
  std::cout << '\n' << test5.top() << " -> Size " << test5.size();
    std::cout << '\n' << ttest5.top() << " -> Size " << ttest5.size();
  std::cout << "\n==============";
  std::cout << "\n===Copy via = Test===";
  s21::Stack<double> test6;
  std::stack<double> ttest6;
  test6 = test4;
  ttest6 = ttest4;
  std::cout << '\n' << test6.top() << " -> Size " << test6.size();
    std::cout << '\n' << ttest6.top() << " -> Size " << ttest6.size();
  std::cout << "\n==============";
  std::cout << "\n===Init list Test===";
  s21::Stack<double> test7 = {1, 2, 3, 4, 5, 12.123};
    std::deque<double> values = {1, 2, 3, 4, 5, 12.123};
    std::stack<double, std::deque<double>> ttest7(values);
  std::cout << '\n' << test7.top() << " -> Size " << test7.size();
    std::cout << '\n' << ttest7.top() << " -> Size " << ttest7.size();
  std::cout << "\n==============";
  return 0;
}